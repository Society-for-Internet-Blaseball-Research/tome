{"version":3,"sources":["lib/game.ts","lib/env.ts","Error.tsx","lib/color-scheme.ts","App.tsx","index.tsx"],"names":["stream","BLASEBALL_ROOT","fetchJson","url","query","a","qs","undefined","URLSearchParams","toString","fetch","then","res","json","setupStream","gameId","setGame","close","EventSource","addEventListener","console","log","event","g","JSON","parse","data","value","games","schedule","find","game","id","gameComplete","setTimeout","makeLineupOrder","teamId","team","Map","i","lineup","length","set","useGameData","useState","error","setError","gameData","lineupOrder","setlineupOrder","useEffect","Promise","all","awayTeam","homeTeam","values","catch","err","updateStatsOn","baseRunners","awayBatter","homeBatter","gameStatsheets","setGameStatsheets","statsheet","ids","teamStatsheets","setTeamStatsheets","flatMap","sheet","awayTeamStats","homeTeamStats","join","playerStatsheets","setPlayerStatsheets","playerStats","group","reduce","rv","x","playerId","push","d","key","name","atBats","caughtStealing","doubles","earnedRuns","groundIntoDp","hitBatters","hitByPitch","hits","hitsAllowed","homeRuns","losses","outsRecorded","pitchesThrown","quadruples","rbis","runs","stolenBases","strikeouts","struckouts","triples","walks","walksIssued","wins","sort","b","get","stats","player","Error","props","className","role","children","media","window","matchMedia","current","text","localStorage","getItem","matches","update","document","documentElement","classList","add","remove","emoji","e","n","Number","isNaN","String","fromCodePoint","StatCard","cols","batter","map","col","BoxScore","battingCols","awayTeamName","awayBatterName","homeTeamName","homeBatterName","SeasonSelector","curSeason","onChange","seasonOptions","selected","disabled","hidden","DisplayModeButton","setValue","type","onClick","swap","setItem","toggle","GameSelector","history","useHistory","day","setDay","season","setSeason","setGameId","maxSeason","setMaxSeason","maxDay","setMaxDay","setGames","match","params","gameid","htmlFor","target","dayCount","awayTeamEmoji","awayTeamNickname","homeTeamEmoji","homeTeamNickname","href","App","path","component","addListener","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b2a6b33f.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\n\nimport { useEffect, useState } from \"react\";\nimport { BLASEBALL_ROOT } from \"./env\";\nimport {\n  Game,\n  GameStatsheet,\n  TeamStatsheet,\n  PlayerStatsheet,\n  Team,\n} from \"./data\";\n\ninterface GameDataHookReturn {\n  error: any;\n  game: Game | undefined;\n  stats: {\n    game: GameStatsheet[];\n    team: TeamStatsheet[];\n    player: PlayerStatsheet[];\n  };\n}\n\nexport async function fetchJson<T>(\n  url: string,\n  query?: { [key: string]: string }\n): Promise<T> {\n  const qs =\n    query === undefined ? \"\" : `?${new URLSearchParams(query).toString()}`;\n  return fetch(`${url}${qs}`).then((res) => res.json());\n}\n\nlet stream: EventSource | undefined;\n\nfunction setupStream(gameId: string, setGame: any) {\n  if (stream !== undefined) {\n    stream.close();\n  }\n  stream = new EventSource(`${BLASEBALL_ROOT}/events/streamData`);\n  stream.addEventListener(\"open\", () => {\n    console.log(`listening for game updates (id=${gameId})`); // eslint-disable-line no-console\n  });\n\n  stream.addEventListener(\"message\", (event) => {\n    const g = JSON.parse(event.data).value?.games?.schedule?.find(\n      (game: Game) => game.id === gameId\n    );\n    if (g) {\n      setGame(g);\n      if (g.gameComplete && stream !== undefined) {\n        stream.close();\n      }\n    }\n  });\n\n  stream.addEventListener(\"error\", () => {\n    console.log(`restarting stream ${gameId}`); // eslint-disable-line no-console\n    if (stream !== undefined) {\n      stream.close();\n    }\n    setTimeout(() => setupStream(gameId, setGame), 2000);\n  });\n}\n\nasync function makeLineupOrder(teamId: string) {\n  return fetchJson<Team>(`${BLASEBALL_ROOT}/database/team?id=${teamId}`).then(\n    (team) => {\n      const res = new Map();\n      for (let i = 0; i < team.lineup.length; i++) {\n        res.set(team.lineup[i], i);\n      }\n      return res;\n    }\n  );\n}\n\nexport function useGameData(id: string): GameDataHookReturn {\n  const [error, setError] = useState<any>();\n\n  // game data\n  const [gameData, setGame] = useState<Game | undefined>();\n  const [lineupOrder, setlineupOrder] = useState<Map<string, number>>();\n  useEffect(() => {\n    fetchJson<Game>(`${BLASEBALL_ROOT}/database/gameById/${id}`)\n      // eslint-disable-next-line consistent-return\n      .then((data) => {\n        setGame(data);\n        if (data && !data.gameComplete) {\n          setupStream(id, setGame);\n        }\n        Promise.all([\n          makeLineupOrder(data.awayTeam),\n          makeLineupOrder(data.homeTeam),\n        ]).then((values) => {\n          setlineupOrder(new Map([...values[0], ...values[1]]));\n        });\n      })\n      .catch((err) => setError(err));\n  }, [id]);\n\n  // this is used as a dependency for statsheet hooks. if these parts of the\n  // game state change, we expect a statsheet update has also occurred, and we\n  // should re-fetch.\n  const updateStatsOn = [\n    gameData?.baseRunners,\n    gameData?.awayBatter,\n    gameData?.homeBatter,\n  ];\n\n  // game statsheet\n  const [gameStatsheets, setGameStatsheets] = useState<GameStatsheet[]>([]);\n  useEffect(() => {\n    if (gameData?.statsheet !== undefined) {\n      fetchJson<GameStatsheet[]>(`${BLASEBALL_ROOT}/database/gameStatsheets`, {\n        ids: gameData.statsheet,\n      })\n        .then((data) => setGameStatsheets(data))\n        .catch((err) => setError(err));\n    }\n  }, [gameData?.statsheet, ...updateStatsOn]);\n\n  // team statsheets\n  const [teamStatsheets, setTeamStatsheets] = useState<TeamStatsheet[]>([]);\n  useEffect(() => {\n    const ids = gameStatsheets.flatMap((sheet) => [\n      sheet.awayTeamStats,\n      sheet.homeTeamStats,\n    ]);\n    if (ids.length > 0) {\n      fetchJson<TeamStatsheet[]>(`${BLASEBALL_ROOT}/database/teamStatsheets`, {\n        ids: ids.join(\",\"),\n      })\n        .then((data) => setTeamStatsheets(data))\n        .catch((err) => setError(err));\n    }\n  }, [gameStatsheets]);\n\n  // player statsheets\n  const [playerStatsheets, setPlayerStatsheets] = useState<PlayerStatsheet[]>(\n    []\n  );\n  useEffect(() => {\n    const ids = teamStatsheets.flatMap((sheet) => sheet.playerStats);\n    if (ids.length > 0) {\n      fetchJson<PlayerStatsheet[]>(\n        `${BLASEBALL_ROOT}/database/playerStatsheets`,\n        {\n          ids: ids.join(\",\"),\n        }\n      )\n        .then((data) => {\n          const group = data.reduce((rv: any, x: any) => {\n            (rv[x.playerId] = rv[x.playerId] || []).push(x);\n            return rv;\n          }, {});\n          let d = [];\n          for (const key in group) {\n            d.push(\n              group[key].reduce((rv: PlayerStatsheet, x: PlayerStatsheet) => {\n                const r: PlayerStatsheet = {\n                  id: x.id,\n                  playerId: x.playerId,\n                  name: x.name,\n                  team: x.team,\n                  teamId: x.teamId,\n                  atBats: x.atBats + (rv.atBats || 0),\n                  caughtStealing: x.caughtStealing + (rv.caughtStealing || 0),\n                  doubles: x.doubles + (rv.doubles || 0),\n                  earnedRuns: x.earnedRuns + (rv.earnedRuns || 0),\n                  groundIntoDp: x.groundIntoDp + (rv.groundIntoDp || 0),\n                  hitBatters: x.hitBatters + (rv.hitBatters || 0),\n                  hitByPitch: x.hitByPitch + (rv.hitByPitch || 0),\n                  hits: x.hits + (rv.hits || 0),\n                  hitsAllowed: x.hitsAllowed + (rv.hitsAllowed || 0),\n                  homeRuns: x.homeRuns + (rv.homeRuns || 0),\n                  losses: x.losses + (rv.losses || 0),\n                  outsRecorded: x.outsRecorded + (rv.outsRecorded || 0),\n                  pitchesThrown: x.pitchesThrown + (rv.pitchesThrown || 0),\n                  quadruples: x.quadruples + (rv.quadruples || 0),\n                  rbis: x.rbis + (rv.rbis || 0),\n                  runs: x.runs + (rv.runs || 0),\n                  stolenBases: x.stolenBases + (rv.stolenBases || 0),\n                  strikeouts: x.strikeouts + (rv.strikeouts || 0),\n                  struckouts: x.struckouts + (rv.struckouts || 0),\n                  triples: x.triples + (rv.triples || 0),\n                  walks: x.walks + (rv.walks || 0),\n                  walksIssued: x.walksIssued + (rv.walksIssued || 0),\n                  wins: x.wins + (rv.wins || 0),\n                };\n                return r;\n              }, {})\n            );\n          }\n          if (lineupOrder !== undefined) {\n            d = d.sort((a, b) =>\n              (lineupOrder.get(a.playerId) ?? 0) >\n              (lineupOrder.get(b.playerId) ?? 0)\n                ? 1\n                : -1\n            );\n          }\n          setPlayerStatsheets(d);\n        })\n        .catch((err) => setError(err));\n    }\n  }, [teamStatsheets, lineupOrder]);\n\n  return {\n    error,\n    game: gameData,\n    stats: {\n      game: gameStatsheets,\n      team: teamStatsheets,\n      player: playerStatsheets,\n    },\n  };\n}\n","// TODO pretty sure this should just be in .env or something? unsure lol\nexport const BLASEBALL_ROOT = \"https://api.sibr.dev/corsmechanics/blaseball/\";\n","import React, { ReactNode } from \"react\";\n\nexport default function Error(props: { children: ReactNode }) {\n  return (\n    <div\n      className=\"container mx-auto my-4 bg-red-100 dark:bg-red-900 border border-red-300 dark:border-red-700 text-red-700 dark:text-red-100 px-4 py-3 rounded\"\n      role=\"alert\"\n    >\n      {props.children}\n    </div>\n  );\n}\n","const media = window.matchMedia(\"(prefers-color-scheme: dark)\");\n\nexport function current(): \"light\" | \"dark\" {\n  const text = window.localStorage.getItem(\"color-scheme\");\n  if (text === \"light\" || text === \"dark\") {\n    return text;\n  }\n  return media.matches ? \"dark\" : \"light\";\n}\n\nfunction update() {\n  if (current() === \"dark\") {\n    document.documentElement.classList.add(\"dark\");\n  } else {\n    document.documentElement.classList.remove(\"dark\");\n  }\n}\n\nexport function setup() {\n  update();\n  media.addListener(update);\n}\n\nexport function toggle() {\n  const swap = current() === \"light\" ? \"dark\" : \"light\";\n  window.localStorage.setItem(\"color-scheme\", swap);\n  update();\n}\n","import React, { useEffect, useState } from \"react\";\nimport { HashRouter, Switch, Route, useHistory } from \"react-router-dom\";\nimport { useGameData, fetchJson } from \"./lib/game\";\nimport Error from \"./Error\";\nimport { Game, SimulationData, SeasonDayCount } from \"./lib/data\";\nimport { BLASEBALL_ROOT } from \"./lib/env\";\nimport { current, toggle } from \"./lib/color-scheme\";\n\nfunction emoji(e: string) {\n  const n = Number(e);\n  return Number.isNaN(n) ? e : String.fromCodePoint(n);\n}\n\nconst StatCard = ({\n  stats,\n  cols,\n  team,\n  batter,\n}: {\n  stats: any;\n  cols: any;\n  team?: string;\n  batter?: string;\n}) => (\n  <div className=\"statCard\">\n    {team && <div>{team}</div>}\n    <table>\n      <tr>\n        <td />\n        {cols.map((col: any) => (\n          <th>{col[1]}</th>\n        ))}\n      </tr>\n      {stats.player.map(\n        (sheet: any) =>\n          sheet[cols[0][0]] > 0 &&\n          (!team || sheet.team === team) && (\n            <tr id={sheet.playerId} className=\"statRow\">\n              <th className=\"playerName\">\n                {batter === sheet.name ? emoji(\"127951\") : \"\"} {sheet.name}\n              </th>\n              {cols.map((col: any) => (\n                <td className=\"statCell\">{sheet[col[0]]}</td>\n              ))}\n            </tr>\n          )\n      )}\n    </table>\n  </div>\n);\n\nconst BoxScore = ({ gameId }: { gameId: string | undefined }) => {\n  if (!gameId || gameId === \"0\") {\n    return <div>Select a game.</div>;\n  }\n  const { error, game, stats } = useGameData(gameId);\n  if (error) {\n    return <Error>{error.toString()}</Error>;\n  }\n\n  if (game === undefined) {\n    return <div>loading statsheets...</div>;\n  }\n\n  if (stats.player.length === 0) {\n    if (game.gameComplete) {\n      return <div>loading statsheets...</div>;\n    }\n    return <div>waiting for game to start...</div>;\n  }\n\n  const battingCols = [\n    [\"atBats\", \"AB\"],\n    [\"runs\", \"R\"],\n    [\"hits\", \"H\"],\n    [\"doubles\", \"2B\"],\n    [\"triples\", \"3B\"],\n    [\"quadruples\", \"4B\"],\n    [\"homeRuns\", \"HR\"],\n    [\"stolenBases\", \"SB\"],\n    [\"struckouts\", \"K\"],\n    [\"walks\", \"BB\"],\n    [\"rbis\", \"RBI\"],\n  ] as const;\n\n  const pitchingCols = [\n    [\"pitchesThrown\", \"P\"],\n    [\"hitsAllowed\", \"H\"],\n    [\"strikeouts\", \"K\"],\n    [\"walksIssued\", \"BB\"],\n    [\"earnedRuns\", \"R\"],\n  ] as const;\n\n  return (\n    <div>\n      <StatCard\n        stats={stats}\n        cols={battingCols}\n        team={game.awayTeamName}\n        batter={game.awayBatterName}\n      />\n      <StatCard\n        stats={stats}\n        cols={battingCols}\n        team={game.homeTeamName}\n        batter={game.homeBatterName}\n      />\n      <StatCard stats={stats} cols={pitchingCols} />\n    </div>\n  );\n};\n\nconst SeasonSelector = ({\n  curSeason,\n  onChange,\n  name,\n  value,\n}: {\n  curSeason: number;\n  onChange: any;\n  name: string;\n  value: number | undefined;\n}) => {\n  const seasonOptions = [];\n  for (let i = curSeason; i >= 0; i--) {\n    seasonOptions.push(\n      <option value={i} key={i}>\n        {i + 1}\n      </option>\n    );\n  }\n  return (\n    <select\n      name={name}\n      onChange={onChange}\n      className=\"gameSelectorInput\"\n      value={value || -1}\n    >\n      <option value=\"-1\" selected disabled hidden>\n        {curSeason === -1 ? \"loading\" : name}\n      </option>\n      {seasonOptions}\n    </select>\n  );\n};\n\nconst DisplayModeButton = () => {\n  const [value, setValue] = useState<string>(current() === \"light\" ? \"🌚\" : \"🌞\");\n  const handleClick = (event: any) => {\n    toggle();\n    setValue(current() === \"light\" ? \"🌚\" : \"🌞\");\n  };\n  return <input type=\"button\" onClick={handleClick} value={value} className=\"displayModeButton\"/>\n};\n\nconst GameSelector = (props: any) => {\n  const history = useHistory();\n  const [day, setDay] = useState<number | undefined>();\n  const [season, setSeason] = useState<number | undefined>();\n  const [gameId, setGameId] = useState<string | undefined>();\n  const [maxSeason, setMaxSeason] = useState<number>(-1);\n  const [maxDay, setMaxDay] = useState<number>(-1);\n\n  const handleDay = (event: any) => {\n    setDay(event.target.value);\n    setGameId(\"0\");\n  };\n  const handleSeason = (event: any) => {\n    setSeason(event.target.value);\n    setGameId(\"0\");\n\n    setMaxDay(-1);\n    fetchJson<SeasonDayCount>(\n      `${BLASEBALL_ROOT}/database/seasondaycount?season=${event.target.value}`\n    ).then((data) => {\n      setMaxDay(data.dayCount + 1);\n    });\n  };\n  const handleGameId = (event: any) => {\n    setGameId(event.target.value);\n    history.push(`/${event.target.value}`);\n  };\n\n  const [games, setGames] = useState<Game[] | undefined>();\n  useEffect(() => {\n    if (!day || !season) {\n      return;\n    }\n    setGames([]);\n    fetchJson<Game[]>(\n      `${BLASEBALL_ROOT}/database/games?season=${season}&day=${day}`\n    ).then((data) => {\n      setGames(data);\n    });\n  }, [day, season]);\n\n  useEffect(() => {\n    // load current day\n    fetchJson<SimulationData>(`${BLASEBALL_ROOT}/database/simulationData`)\n      .then((data) => {\n        setMaxSeason(data.season);\n        setMaxDay(data.day);\n      })\n      .then(() => {\n        if (props.match?.params.gameid) {\n          return fetchJson<Game>(\n            `${BLASEBALL_ROOT}/database/gameById/${props.match.params.gameid}`\n          );\n        }\n        return null;\n      })\n      .then((data) => {\n        if (!data) {\n          return;\n        }\n        setDay(data.day);\n        setSeason(data.season);\n        setGameId(data.id);\n      });\n  }, []);\n\n  return (\n    <div className=\"gameSelector\">\n      <label htmlFor=\"Season\" className=\"gameSelectorLabel\">\n        Season\n      </label>\n      <SeasonSelector\n        curSeason={maxSeason}\n        onChange={handleSeason}\n        name=\"Season\"\n        value={season}\n      />\n      <label htmlFor=\"Day\" className=\"gameSelectorLabel\">\n        Day\n      </label>\n      <SeasonSelector\n        curSeason={maxDay}\n        onChange={handleDay}\n        name=\"Day\"\n        value={day}\n      />\n      <select name=\"game\" id=\"game\" onChange={handleGameId} value={gameId}>\n        <option value=\"0\" selected disabled hidden>\n          {games ? \"Select a game\" : \"Enter a day\"}\n        </option>\n        {games &&\n          games.map((game: Game) => (\n            <option value={game.id}>\n              {emoji(game.awayTeamEmoji)} {game.awayTeamNickname} at{\" \"}\n              {emoji(game.homeTeamEmoji)} {game.homeTeamNickname}\n            </option>\n          ))}\n      </select>\n      <BoxScore gameId={gameId} />\n      <DisplayModeButton />\n      <div className=\"footer\">Icons from <a href=\"https://game-icons.net/\">game-icons.net</a></div>\n    </div>\n  );\n};\n\nfunction App() {\n  return (\n    <HashRouter>\n      <div className=\"container mx-auto px-4\">\n        <Switch>\n          <Route path=\"/:gameid\" component={GameSelector} />\n          <Route path=\"/\">\n            <GameSelector />\n          </Route>\n        </Switch>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { setup as setupColorScheme } from \"./lib/color-scheme\";\n\n// TODO button to override media query\nsetupColorScheme();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}